# This is the name of the workflow that will appear in the GitHub Actions tab.
name: Build Android APK

# This tells GitHub to run the workflow every time you 'push' code to the main or master branch.
on:
  push:
    branches: [ "main", "master" ]

# This defines the actual job that will run.
jobs:
  build:
    # This specifies that the job will run on a fresh, up-to-date Ubuntu Linux server.
    runs-on: ubuntu-latest

    steps:
      # Step 1: It checks out your repository's code so the server has access to your files.
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: It sets up the Java Development Kit (JDK), which is required to build Android apps.
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'gradle'

      # Step 3: The 'gradlew' file in Android projects needs permission to be executed. This step grants it.
      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew

      # Step 4: This is the main build command. It tells Gradle to build the 'debug' version of your app.
      - name: Build with Gradle
        run: ./gradlew assembleDebug

      # Step 5: After the build is successful, this step finds the generated .apk file and uploads it.
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          # This is the name the downloadable file will have.
          name: app-debug.apk
          # This is the path where the .apk file is located after the build.
          path: app/build/outputs/apk/debug/app-debug.apk
