apply plugin: 'com.android.application'

// This block is required to find the new library.
repositories {
    google()
    mavenCentral()
}

android {
    compileSdkVersion 33 
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.kop.app"
        minSdkVersion 24
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    aaptOptions {
        noCompress "tflite"
    }

    // THIS CONFLICTING BLOCK HAS BEEN REMOVED.
    // It was forcing the build to ONLY look in the 'libs' folder for native code,
    // which is why MediaPipe was failing. Removing it allows Gradle to find
    // native libraries from ALL sources, including your dependencies.
    //
    // sourceSets {
    //     main {
    //         jniLibs.srcDirs = ['libs']
    //     }
    // }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.core:core-ktx:1.6.0'

    implementation 'androidx.recyclerview:recyclerview:1.2.1'

    implementation 'com.quickbirdstudios:opencv-contrib:4.5.3'

    implementation 'androidx.exifinterface:exifinterface:1.3.3'

    implementation 'com.google.mediapipe:tasks-vision:0.10.14'

    // REPLACED with the exact library you provided. This will fix the build.
    implementation 'com.bihe0832.android:lib-ffmpeg-mobile-aaf:6.9.0'
}
